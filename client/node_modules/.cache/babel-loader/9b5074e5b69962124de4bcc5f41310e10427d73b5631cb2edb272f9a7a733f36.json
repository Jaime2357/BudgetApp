{"ast":null,"code":"var _jsxFileName = \"/Users/jaime/Documents/Personal/Code Repos/BudgetApp/client/src/pages/SignUp.js\";\nimport { React, useState } from 'react';\nimport { Navigate, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  // const [username, setUserName] = useState(null);\n  // const [password, setPassword] = useState(null);\n  // const [user_id, setId] = useState(null);\n  // const [invalid, setInvalid] = useState(false);\n  // const [badName, setBadName] = useState(null);\n  // const [verified, setVerified] = useState(null); // Might need to be in context\n\n  // const validate = async () => {\n\n  //     setInvalid(false);\n  //     setBadName(false);\n\n  //     try{\n  //         const ID = await axios.get('/api/login', {\n  //             params: {\n  //                 username,\n  //                 password\n  //             }\n  //         })\n  //         console.log(\"ID Returned: \", ID);\n  //         if(ID === -1){\n  //             console.log(\"Incorrect Password\");\n  //             setInvalid(true);\n  //         }\n  //         else if(ID === -2){\n  //             console.log(\"Username Not Found\");\n  //             setBadName('Incorrect Username');\n  //         }\n  //         else{\n  //             console.log(\"Login Verified with ID: \", ID)\n  //             setId(ID);\n  //             setVerified('Incorrect Password');\n  //             console.log(\"Login Successful: User \", user_id);\n  //         }\n  //     }\n  //     catch(e){\n  //         console.log(\"Error: \", e);\n  //     }\n\n  // }\n\n  // if(verified){\n  //     return  <Navigate to={'/'} />;\n  // }\n  // else{\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Signup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 13\n  }, this);\n  // }\n};\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","Navigate","Link","axios","jsxDEV","_jsxDEV","SignUp","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jaime/Documents/Personal/Code Repos/BudgetApp/client/src/pages/SignUp.js"],"sourcesContent":["import { React, useState } from 'react';\nimport {Navigate, Link} from 'react-router-dom'\nimport axios from 'axios';\n\nconst SignUp = () => {\n\n    // const [username, setUserName] = useState(null);\n    // const [password, setPassword] = useState(null);\n    // const [user_id, setId] = useState(null);\n    // const [invalid, setInvalid] = useState(false);\n    // const [badName, setBadName] = useState(null);\n    // const [verified, setVerified] = useState(null); // Might need to be in context\n\n    // const validate = async () => {\n\n    //     setInvalid(false);\n    //     setBadName(false);\n\n    //     try{\n    //         const ID = await axios.get('/api/login', {\n    //             params: {\n    //                 username,\n    //                 password\n    //             }\n    //         })\n    //         console.log(\"ID Returned: \", ID);\n    //         if(ID === -1){\n    //             console.log(\"Incorrect Password\");\n    //             setInvalid(true);\n    //         }\n    //         else if(ID === -2){\n    //             console.log(\"Username Not Found\");\n    //             setBadName('Incorrect Username');\n    //         }\n    //         else{\n    //             console.log(\"Login Verified with ID: \", ID)\n    //             setId(ID);\n    //             setVerified('Incorrect Password');\n    //             console.log(\"Login Successful: User \", user_id);\n    //         }\n    //     }\n    //     catch(e){\n    //         console.log(\"Error: \", e);\n    //     }\n\n    // }\n\n    // if(verified){\n    //     return  <Navigate to={'/'} />;\n    // }\n    // else{\n        return (\n            <div>\n                Signup\n                {/* <h1> Login Page</h1>\n\n                <form onSubmit={validate}>\n                    <h2> Username </h2>\n                    <input \n                        type = \"text\"\n                        value = {username}\n                        onChange={(ev) => setUserName(ev.target.value)}\n                        placeholder='John'\n                        required\n                        minLength={1}\n                    />\n                    {badName && <div className=\"error-message\">{badName}</div>}\n\n                    <h2> Password </h2>\n                    <input \n                        type = \"text\"\n                        value = {password}\n                        onChange={(ev) => setPassword(ev.target.value)}\n                        required\n                        minLength={1}\n                    />\n                    {invalid && <div className=\"error-message\">{invalid}</div>}\n\n                    <button type=\"submit\">Login</button>\n\n                </form>\n                <Link to={'/signup'}> \"Don't have an account? Register Here\" </Link> */}\n            </div>\n        );\n    // }\n\n};\n\nexport default SignUp;"],"mappings":";AAAA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,QAAQ,EAAEC,IAAI,QAAO,kBAAkB;AAC/C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAEjB;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACI,oBACID,OAAA;IAAAE,QAAA,EAAK;EAED;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OA4BC,CAAC;EAEd;AAEJ,CAAC;AAACC,EAAA,GAlFIN,MAAM;AAoFZ,eAAeA,MAAM;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}