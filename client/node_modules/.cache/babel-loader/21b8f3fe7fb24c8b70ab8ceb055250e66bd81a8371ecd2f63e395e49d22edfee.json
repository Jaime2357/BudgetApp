{"ast":null,"code":"var _jsxFileName = \"/Users/jaime/Documents/Personal/Code Repos/BudgetApp/client/src/MyContext.js\",\n  _s = $RefreshSig$();\nimport { useState, createContext } from 'react';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyContext = /*#__PURE__*/createContext({});\nexport function MyContextProvider({\n  children\n}) {\n  _s();\n  const [user_id, setUserID] = useState(null);\n  const [validated, setValidated] = useState(false);\n\n  // Add toast function to the context\n  const successToast = (message, type = 'default') => {\n    toast.success(message);\n  };\n  const errorToast = (message, type = 'default') => {\n    toast.success(message);\n  };\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: {\n      user_id,\n      setUserID,\n      validated,\n      setValidated,\n      successToast,\n      errorToast\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(MyContextProvider, \"Fi1KK1jMCrTswr7a0wjnC1aUUb4=\");\n_c = MyContextProvider;\nvar _c;\n$RefreshReg$(_c, \"MyContextProvider\");","map":{"version":3,"names":["useState","createContext","toast","jsxDEV","_jsxDEV","MyContext","MyContextProvider","children","_s","user_id","setUserID","validated","setValidated","successToast","message","type","success","errorToast","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jaime/Documents/Personal/Code Repos/BudgetApp/client/src/MyContext.js"],"sourcesContent":["import { useState, createContext } from 'react';\nimport { toast } from 'react-toastify';\n\nexport const MyContext = createContext({});\n\nexport function MyContextProvider({children}){\n    const [user_id, setUserID] = useState(null);\n    const [validated, setValidated] = useState(false);\n\n    // Add toast function to the context\n    const successToast = (message, type = 'default') => {\n        toast.success(message);\n    };\n\n    const errorToast = (message, type = 'default') => {\n        toast.success(message);\n    };\n\n    return (\n        <MyContext.Provider value={{user_id, setUserID, validated,setValidated, successToast, errorToast}}>\n            {children}\n        </MyContext.Provider>\n    );\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,aAAa,QAAQ,OAAO;AAC/C,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,OAAO,MAAMC,SAAS,gBAAGJ,aAAa,CAAC,CAAC,CAAC,CAAC;AAE1C,OAAO,SAASK,iBAAiBA,CAAC;EAACC;AAAQ,CAAC,EAAC;EAAAC,EAAA;EACzC,MAAM,CAACC,OAAO,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC3C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAMa,YAAY,GAAGA,CAACC,OAAO,EAAEC,IAAI,GAAG,SAAS,KAAK;IAChDb,KAAK,CAACc,OAAO,CAACF,OAAO,CAAC;EAC1B,CAAC;EAED,MAAMG,UAAU,GAAGA,CAACH,OAAO,EAAEC,IAAI,GAAG,SAAS,KAAK;IAC9Cb,KAAK,CAACc,OAAO,CAACF,OAAO,CAAC;EAC1B,CAAC;EAED,oBACIV,OAAA,CAACC,SAAS,CAACa,QAAQ;IAACC,KAAK,EAAE;MAACV,OAAO;MAAEC,SAAS;MAAEC,SAAS;MAACC,YAAY;MAAEC,YAAY;MAAEI;IAAU,CAAE;IAAAV,QAAA,EAC7FA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAE7B;AAACf,EAAA,CAlBeF,iBAAiB;AAAAkB,EAAA,GAAjBlB,iBAAiB;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}